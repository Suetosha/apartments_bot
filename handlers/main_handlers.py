from aiogram import Router, types, F
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from dotenv import load_dotenv

from database.activity import get_liked_apartments
from database.filter import get_user_filters
from database.users import save_user
from keyboards.favorites_kb import favorites_kb

load_dotenv()
router = Router()


from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

@router.message(CommandStart())
async def process_start_command(message: Message, state: FSMContext):
    user_id = message.from_user.id
    save_user(user_id)

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ù–∞–π—Ç–∏ –∫–≤–∞—Ä—Ç–∏—Ä—É", callback_data="start_filter")],
        [InlineKeyboardButton(text="–°–¥–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É", callback_data="list_an_apartment")]
    ])

    sent_message = await message.answer(
        '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n'
        '–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —Å–¥–∞—á–∏ –∫–≤–∞—Ä—Ç–∏—Ä.\n'
        '–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?',
        reply_markup=keyboard
    )
    await state.update_data(message_id=sent_message.message_id)



@router.message(Command("view_apartments"))
async def view_apartments_command(message: Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç callback_query
    button = types.InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä", callback_data="view_apartments")
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[[button]])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
    await message.answer("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–≤–∞—Ä—Ç–∏—Ä:", reply_markup=keyboard)




@router.message(Command("filter"))
async def filter_command(message: Message, state: FSMContext):
    user_id = message.from_user.id

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç callback_query
    button = types.InlineKeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä", callback_data="start_filter")
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[[button]])

    filter_data = get_user_filters(user_id)

    if filter_data:
        result_text = (
            f"üîπ –ì–æ—Ä–æ–¥: {filter_data['city']}\n"
            f"üîπ –ú–µ—Ç—Ä—ã: {filter_data['meters']}"
        )
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
        sent_message = await message.answer(f"–í–∞—à —Ñ–∏–ª—å—Ç—Ä:\n{result_text}", reply_markup=keyboard)
    else:
        sent_message = await message.answer('–§–∏–ª—å—Ç—Ä –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω.', reply_markup=keyboard)

    await state.update_data(message_id=sent_message.message_id)


@router.message(Command('favorites'))
async def favorites_command(message: Message):
    user_id = message.from_user.id
    liked_apartments = get_liked_apartments(user_id)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –∏ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ –æ–±—ä–µ–∫—Ç
    sent_message = await message.answer('–°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä')

    # –¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –µ—Å—Ç—å message_id
    message_id = sent_message.message_id

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É—á–µ—Ç–æ–º –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ message_id
    keyboard = favorites_kb(liked_apartments, user_id, message_id=message_id)

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await sent_message.edit_text('–°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä', reply_markup=keyboard)


@router.callback_query(F.data == 'cancel')
async def process_cancel_press(callback: CallbackQuery):
    await callback.message.delete()





